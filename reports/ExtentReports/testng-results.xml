<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="37" passed="34" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-29T21:15:53 IST" name="OpenCart Test Suite" finished-at="2025-10-29T21:36:46 IST" duration-ms="1253247">
    <groups>
    </groups>
    <test started-at="2025-10-29T21:15:53 IST" name="Registration Tests" finished-at="2025-10-29T21:36:46 IST" duration-ms="1253247">
      <class name="com.opencart.tests.RegisterTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:15:52 IST" name="beforeSuite" finished-at="2025-10-29T21:15:53 IST" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setupClass()[pri:0, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:15:53 IST" name="setupClass" finished-at="2025-10-29T21:16:06 IST" duration-ms="12507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupClass -->
        <test-method is-config="true" signature="setupTest()[pri:0, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:16:06 IST" name="setupTest" finished-at="2025-10-29T21:16:06 IST" duration-ms="257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method signature="testPlaceholderTexts()[pri:1, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:16:06 IST" name="testPlaceholderTexts" description="Validate placeholder texts in registration form fields" finished-at="2025-10-29T21:16:19 IST" duration-ms="12603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPlaceholderTexts -->
        <test-method signature="testMandatoryFieldIndicators()[pri:2, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:16:19 IST" name="testMandatoryFieldIndicators" description="Validate mandatory field indicators" finished-at="2025-10-29T21:16:30 IST" duration-ms="11176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMandatoryFieldIndicators -->
        <test-method signature="testPageMetadata()[pri:3, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:16:30 IST" name="testPageMetadata" description="Validate page metadata" finished-at="2025-10-29T21:16:41 IST" duration-ms="10890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPageMetadata -->
        <test-method signature="testUILayout()[pri:4, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:16:41 IST" name="testUILayout" description="Validate UI layout and design" finished-at="2025-10-29T21:16:52 IST" duration-ms="11433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUILayout -->
        <test-method signature="testRegistrationWithMandatoryFields()[pri:5, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:16:52 IST" name="testRegistrationWithMandatoryFields" description="Validate registration using only mandatory fields" finished-at="2025-10-29T21:17:06 IST" duration-ms="13260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistrationWithMandatoryFields -->
        <test-method signature="testRegistrationWithAllFields()[pri:6, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:17:06 IST" name="testRegistrationWithAllFields" description="Validate registration with all available fields" finished-at="2025-10-29T21:17:12 IST" duration-ms="6147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistrationWithAllFields -->
        <test-method signature="testEmptyMandatoryFields()[pri:7, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:17:12 IST" name="testEmptyMandatoryFields" description="Validate error messages for empty mandatory fields" finished-at="2025-10-29T21:17:39 IST" duration-ms="27512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyMandatoryFields -->
        <test-method signature="testFieldsWithSpacesOnly()[pri:8, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:17:39 IST" name="testFieldsWithSpacesOnly" description="Validate fields don&#039;t accept only spaces" finished-at="2025-10-29T21:19:17 IST" duration-ms="97302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFieldsWithSpacesOnly -->
        <test-method signature="testTrimSpaces()[pri:9, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:19:17 IST" name="testTrimSpaces" description="Validate trimming of leading/trailing spaces" finished-at="2025-10-29T21:19:31 IST" duration-ms="14131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimSpaces -->
        <test-method signature="testInvalidEmailFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:19:31 IST" name="testInvalidEmailFormat" description="Validate registration with invalid email format" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:22:02 IST" duration-ms="151487" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Vimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kumar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9876543210]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No email validation detected for value: ''. Expected HTML5 validation, JavaScript validation, or server-side error. expected [true] but found [false],
Invalid email warning (via CommonWrapper) not shown! expected [true] but found [false],
Email validation message (via HTML5) not as expected! expected [true] but found [false],
Email field incorrectly reported as valid! expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No email validation detected for value: ''. Expected HTML5 validation, JavaScript validation, or server-side error. expected [true] but found [false],
Invalid email warning (via CommonWrapper) not shown! expected [true] but found [false],
Email validation message (via HTML5) not as expected! expected [true] but found [false],
Email field incorrectly reported as valid! expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.opencart.pages.RegisterPage.verifyInvalidEmailError(RegisterPage.java:503)
at com.opencart.tests.RegisterTests.testInvalidEmailFormat(RegisterTests.java:360)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailFormat -->
        <test-method signature="testInvalidEmailFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:22:03 IST" name="testInvalidEmailFormat" description="Validate registration with invalid email format" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:22:03 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shiva]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[shivab1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailFormat -->
        <test-method signature="testInvalidEmailFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:22:03 IST" name="testInvalidEmailFormat" description="Validate registration with invalid email format" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:22:03 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Venkat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rajendran]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[venkatr1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailFormat -->
        <test-method signature="testInvalidEmailFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:22:03 IST" name="testInvalidEmailFormat" description="Validate registration with invalid email format" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:24:41 IST" duration-ms="158159" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[At]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lee]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalidemail]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No email validation detected for value: ''. Expected HTML5 validation, JavaScript validation, or server-side error. expected [true] but found [false],
Invalid email warning (via CommonWrapper) not shown! expected [true] but found [false],
Email validation message (via HTML5) not as expected! expected [true] but found [false],
Email field incorrectly reported as valid! expected [false] but found [true],
Invalid email warning (via CommonWrapper) not shown! expected [true] but found [false],
Email validation message (via HTML5) not as expected! expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No email validation detected for value: ''. Expected HTML5 validation, JavaScript validation, or server-side error. expected [true] but found [false],
Invalid email warning (via CommonWrapper) not shown! expected [true] but found [false],
Email validation message (via HTML5) not as expected! expected [true] but found [false],
Email field incorrectly reported as valid! expected [false] but found [true],
Invalid email warning (via CommonWrapper) not shown! expected [true] but found [false],
Email validation message (via HTML5) not as expected! expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.opencart.pages.RegisterPage.verifyInvalidEmailError(RegisterPage.java:503)
at com.opencart.tests.RegisterTests.testInvalidEmailFormat(RegisterTests.java:360)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailFormat -->
        <test-method signature="testInvalidEmailFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:10, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:24:41 IST" name="testInvalidEmailFormat" description="Validate registration with invalid email format" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:24:41 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Vimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kumar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[vimal1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[invalid-phone]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidEmailFormat -->
        <test-method signature="testInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:24:41 IST" name="testInvalidPhoneNumber" description="Validate registration with invalid phone number" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:24:41 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Vimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kumar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9876543210]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPhoneNumber -->
        <test-method signature="testInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:24:41 IST" name="testInvalidPhoneNumber" description="Validate registration with invalid phone number" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:24:41 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shiva]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[shivab1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPhoneNumber -->
        <test-method signature="testInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:24:41 IST" name="testInvalidPhoneNumber" description="Validate registration with invalid phone number" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:24:41 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Venkat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rajendran]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[venkatr1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPhoneNumber -->
        <test-method signature="testInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:24:41 IST" name="testInvalidPhoneNumber" description="Validate registration with invalid phone number" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:24:41 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[At]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lee]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalidemail]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPhoneNumber -->
        <test-method signature="testInvalidPhoneNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:24:41 IST" name="testInvalidPhoneNumber" description="Validate registration with invalid phone number" data-provider="InvalidRegistrationData" finished-at="2025-10-29T21:27:40 IST" duration-ms="178410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Vimal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Kumar]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[vimal1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[invalid-phone]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidPhoneNumber -->
        <test-method signature="testPasswordComplexity()[pri:12, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:27:40 IST" name="testPasswordComplexity" description="Validate password complexity requirements" finished-at="2025-10-29T21:30:20 IST" duration-ms="160304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordComplexity -->
        <test-method signature="testPasswordMismatchWithData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:13, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:30:20 IST" name="testPasswordMismatchWithData" description="Validate password mismatch error" data-provider="PasswordMismatchData" finished-at="2025-10-29T21:30:53 IST" duration-ms="32868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shiva]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[shivab1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@1234]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordMismatchWithData -->
        <test-method signature="testEmptyPasswordConfirm()[pri:14, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:30:53 IST" name="testEmptyPasswordConfirm" description="Validate empty password confirm field" finished-at="2025-10-29T21:31:05 IST" duration-ms="12560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyPasswordConfirm -->
        <test-method signature="testPasswordVisibilityToggle()[pri:15, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:31:05 IST" name="testPasswordVisibilityToggle" description="Validate password visibility toggle" finished-at="2025-10-29T21:31:16 IST" duration-ms="10972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordVisibilityToggle -->
        <test-method signature="testFieldConstraints()[pri:16, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:31:16 IST" name="testFieldConstraints" description="Validate field constraints and character limits" finished-at="2025-10-29T21:31:27 IST" duration-ms="11105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFieldConstraints -->
        <test-method signature="testNavigationToRegister()[pri:17, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:31:27 IST" name="testNavigationToRegister" description="Validate navigation to register page" finished-at="2025-10-29T21:31:38 IST" duration-ms="10732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigationToRegister -->
        <test-method signature="testKeyboardNavigation()[pri:18, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:31:38 IST" name="testKeyboardNavigation" description="Validate registration using keyboard navigation" finished-at="2025-10-29T21:31:51 IST" duration-ms="13140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeyboardNavigation -->
        <test-method signature="testNewsletterSubscriptionYes()[pri:19, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:31:51 IST" name="testNewsletterSubscriptionYes" description="Validate registration with Newsletter subscription (Yes)" finished-at="2025-10-29T21:31:57 IST" duration-ms="5931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewsletterSubscriptionYes -->
        <test-method signature="testNewsletterSubscriptionNo()[pri:20, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:31:57 IST" name="testNewsletterSubscriptionNo" description="Validate registration with Newsletter subscription (No)" finished-at="2025-10-29T21:32:03 IST" duration-ms="6043" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewsletterSubscriptionNo -->
        <test-method signature="testPrivacyPolicyDefaultState()[pri:21, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:32:03 IST" name="testPrivacyPolicyDefaultState" description="Validate Privacy Policy checkbox default state" finished-at="2025-10-29T21:32:07 IST" duration-ms="3796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrivacyPolicyDefaultState -->
        <test-method signature="testRegistrationWithoutPrivacyPolicy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:22, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:32:07 IST" name="testRegistrationWithoutPrivacyPolicy" description="Validate registration fails without Privacy Policy agreement" data-provider="PrivacyPolicyData" finished-at="2025-10-29T21:35:08 IST" duration-ms="180508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Venkat]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rajendran]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[venkatr1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistrationWithoutPrivacyPolicy -->
        <test-method signature="testDuplicateEmailRegistration()[pri:23, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:35:08 IST" name="testDuplicateEmailRegistration" description="Validate registration with existing email address" finished-at="2025-10-29T21:35:27 IST" duration-ms="19449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDuplicateEmailRegistration -->
        <test-method signature="testDataStorageVerification(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:24, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:35:27 IST" name="testDataStorageVerification" description="Validate data storage verification" data-provider="ValidRegistrationData" finished-at="2025-10-29T21:35:40 IST" duration-ms="12976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yogi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[vimal1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDataStorageVerification -->
        <test-method signature="testNavigationLinks()[pri:25, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:35:40 IST" name="testNavigationLinks" description="Validate all navigation links on register page" finished-at="2025-10-29T21:36:17 IST" duration-ms="36540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNavigationLinks -->
        <test-method signature="testConfirmationEmail(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:26, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:36:17 IST" name="testConfirmationEmail" description="Validate confirmation email process" data-provider="ValidRegistrationData" finished-at="2025-10-29T21:36:31 IST" duration-ms="14014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yogi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[vimal1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfirmationEmail -->
        <test-method signature="testCrossBrowserCompatibility(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:27, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:36:31 IST" name="testCrossBrowserCompatibility" description="Validate cross-browser compatibility" data-provider="ValidRegistrationData" finished-at="2025-10-29T21:36:38 IST" duration-ms="6724" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yogi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[vimal1@test.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Password@123]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[TRUE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCrossBrowserCompatibility -->
        <test-method signature="cleanupAfterTests()[pri:99, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:36:38 IST" name="cleanupAfterTests" description="Cleanup and navigation to home" finished-at="2025-10-29T21:36:46 IST" duration-ms="8390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupAfterTests -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:36:46 IST" name="tearDownClass" finished-at="2025-10-29T21:36:46 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Password confirmation error should be displayed expected [true] but found [false],
Should show error message when privacy policy is not accepted expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Password confirmation error should be displayed expected [true] but found [false],
Should show error message when privacy policy is not accepted expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.opencart.base.BaseTest.tearDownClass(BaseTest.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeAfterClassConfigurations(TestMethodWorker.java:238)
at org.testng.internal.invokers.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:223)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:137)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.opencart.tests.RegisterTests@35835e65]" started-at="2025-10-29T21:36:47 IST" name="afterSuite" finished-at="2025-10-29T21:36:48 IST" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.opencart.tests.RegisterTests -->
    </test> <!-- Registration Tests -->
  </suite> <!-- OpenCart Test Suite -->
</testng-results>
